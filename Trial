#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

struct Task
{
    string name;
    string description;
};


struct User {
    string name;
    string password;
    vector<Task> tasks;
};

vector<User> users;

void addUser() {
    User newUser;
    cout << "Enter name: ";
    cin >> newUser.name;
    cout << "Enter password: ";
    cin >> newUser.password;
    users.push_back(newUser);
    cout << "User added successfully!" << endl;
}

void displayUsers() {
    if (users.empty()) {
        cout << "No users found." << endl;
    } else {
        cout << "========= Users =========" << endl;
        for (const auto& user : users) {
            cout << "Name: " << user.name << endl;
            cout << "-----------------------" << endl;
        }
    }
}

bool loginUser() {
    string name, password;
    cout << "Enter name: ";
    cin >> name;
    cout << "Enter password: ";
    cin >> password;

    for (const auto& user : users) {
        if (user.name == name && user.password == password) {
            cout << "Login successful!" << endl;
            return true;
        }
    }
    
    cout << "Login failed. Invalid username or password." << endl;
    return false;
}

void addTask() {
    Task newTask;
    cout << "Enter task: ";
    cin.ignore();
    getline(cin, newTask.name);
    cout<<"Enter task description: ";
    getline(cin, newTask.description);
    users.back().tasks.push_back(newTask);
    cout << "Task added successfully!" << endl;
}

void viewTasks() {
    if (users.back().tasks.empty()) {
        cout << "No tasks found." << endl;
    } else {
        cout << "========= Tasks =========" << endl;
        int taskNumber = 1;
        for (const auto& task : users.back().tasks) {
            cout << "Task" << taskNumber << ":" << endl;
            cout << "Name: " << task.name << endl;
            cout << "Description: " << task.description << endl;
            cout << "-----------------------" << endl;
            taskNumber++;
        }
    }
}

int main() {
    int choice;

    do {
        cout << "========= User Management =========" << endl;
        cout << "1. Add User" << endl;
        cout << "2. Display Users" << endl;
        cout << "3. Choose User" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                addUser();
                break;
            case 2:
                displayUsers();
                break;
            case 3:
                if (loginUser()) {
                    int userChoice;
                    do {
                        cout << "========= Task Manager =========" << endl;
                        cout << "1. Add Task" << endl;
                        cout << "2. View Tasks" << endl;
                        cout << "3. Exit" << endl;
                        cout << "Enter your choice: ";
                        cin >> userChoice;
                        switch (userChoice) {
                            case 1:
                                addTask();
                                break;
                            case 2:
                                viewTasks();
                                break;
                            case 3:
                                cout << "Exiting Task Manager. Goodbye!" << endl;
                                break;
                            default:
                                cout << "Invalid choice. Please try again." << endl;
                        }
                        cout << endl;
                    } while (userChoice != 3);
                }
                break;
            case 4:
                cout << "Exiting User Management. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }

        cout << endl;
    } while (choice != 4);

    return 0;
}
